---
name: Generate Documentation

on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install and Configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.0
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.poetry-venvs
          installer-parallel: true

      - name: Cache Poetry VirtualEnv
        uses: actions/cache@v3
        id: cache
        with:
          path: ~/.poetry-venvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Load Cached VirtualEnv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.poetry-venvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install Self
        run: poetry install --no-interaction --only-root

      - name: Sphinx build
        run: |-
          poetry run sphinx-build -b html docs/source/ docs/build/html

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build/html
          force_orphan: true
